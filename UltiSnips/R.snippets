# ============================================================================
# ============================= R Snippets ===================================
# ============================================================================

# ============================== Templates ===================================

snippet beg "begin{} / end{}" b
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet enum "Enumerate" b
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" b
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}
endsnippet

# ----------------------------- Math Shortcuts -------------------------------

snippet cross "cross product" b
\begin{vmatrix}
	i&j&k\\\\
	${1:a_1}&${2:a_2}&${3:a_3}\\\\
	${4:B_1}&${5:b_2}&${6:b_3}\\\\
\end{vmatrix}
endsnippet

snippet vmat "vmatrix" b
\begin{vmatrix}
	${1:a}&${2:b}\\\\
	${3:c}&${4:d}\\\\
\end{vmatrix}
endsnippet

snippet pmat "pmat" b
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

snippet bmat "bmat" b
\begin{bmatrix} $1 \\ $2 \end{bmatrix} $0
endsnippet

snippet bmatl "long bmat" b
\begin{bmatrix} $1 \\ $2 \\ $3 \end{bmatrix} $0
endsnippet

snippet bmatsq "square bmat" b
\begin{bmatrix}
$1 & $2 \\
$3 & $4
\end{bmatrix}
$0
endsnippet

snippet eq "equation" b
\left\{\begin{matrix}
${1:y_1} & =${2:x} \\
${3:y_2} & =${4:x}
\end{matrix}\right.
endsnippet


# =============================== Shortcuts ==================================

snippet bff "bold" iA
\textbf{$1}
endsnippet

snippet brs "left( \right)" iA
\left( $1 \right)$0
endsnippet

snippet brm "left[ \right]" iA
\left[ $1 \right]$0
endsnippet

snippet brl "left{ \right}" iA
\left{ $1 \right}$0
endsnippet

snippet brt "| |" iA
\left| $1 \right|$0
endsnippet

snippet << "langle" iA
\langle $1 \rangle$0
endsnippet

priority 100
snippet ... "ldots" i
\ldots
endsnippet

snippet vvs "space" iA
\vspace{10px}
endsnippet

snippet mk "Math" wA
$$0$
endsnippet

snippet dm "Math" wA
$$ $0 $$
endsnippet

snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet sin; "sin" iA
\sin
endsnippet

snippet cos; "cos" iA
\cos
endsnippet

snippet tan; "tan" iA
\tan
endsnippet

snippet pi "pi" iA
\pi
endsnippet

snippet the; "theta" iA
\theta
endsnippet

snippet lam\ "lambda" iA
\lambda
endsnippet

snippet omega "omega" iA
\Omega
endsnippet

snippet sr "^2" iA
^2
endsnippet

snippet cb "^3" iA
^3
endsnippet

snippet frr "Fraction" iA
\\frac{$1}{$2}
endsnippet

snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wr
\\frac{`!p snip.rv = match.group(1)`}{$1}
endsnippet

snippet "(\\?\w+)(;\;|\;;)" "Vector postfix" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet

snippet tc "code" i
\textttt{}
endsnippet

# ================================= Math =====================================
snippet tag "Tags" iA
\tag{$0}
endsnippet

snippet iff "iff" i
\iff
endsnippet

snippet im; "impies" iA
\quad \implies \quad
endsnippet

snippet inn "in" iA
\in
endsnippet

snippet cc "subseteq" i
\subseteq
endsnippet

snippet NN "natural" iA
\mathbb{N}
endsnippet

snippet RR "reals" iA
\mathbb{R}${1:^\{$0\}}
endsnippet

snippet QQ "rational" iA
\mathbb{Q}
endsnippet

snippet ZZ "integers" iA
\mathbb{Z}
endsnippet

snippet OO "empty set" iA
\emptyset
endsnippet

snippet ceil "ceil" i
\left\lceil $1 \right\rceil
endsnippet

snippet qq "quad" iA
\quad
endsnippet

snippet ,, "space" iA
\,
endsnippet

snippet sq; "\sqrt{}" iA
\sqrt{${1:${VISUAL}}}
endsnippet

snippet tt "text" i
\text{${1:${VISUAL}}}
endsnippet

# =================================== R ======================================

snippet dl "Download and install a package" b
download.file("${1:${VISUAL:url to package}}", destfile = "${2:${1/.*\/(\S*)$/(?1:$1)/ga}}")
install.packages("$2", type = "source", repos = NULL)
library("${3:${2/^(\w+)_.*$/(?1:$1)/ga}}")
endsnippet

snippet lib "library" b
library(${1:package})
endsnippet

snippet req "require" b
require(${1:package})
endsnippet

snippet src "source" b
source("${1:file.R}")
endsnippet

snippet mat "matrix" b
matrix(${1:data}, nrow = ${2:rows}, ncol = ${3:cols})
endsnippet

snippet if; "if" bA
if (${1:condition}) {
	${0}
}
endsnippet

snippet el "else" b
else {
	${0}
}
endsnippet

snippet ei "elseif" b
else if (${1:condition}) {
	${0}
}
endsnippet

snippet ife "if .. else"
if ($1) {
	${2:${VISUAL}}
} else {
	$0
}
endsnippet

snippet fun "function" b
${1:name} <- function(${2:variables}) {
	${0}
}
endsnippet

snippet for "for" b
for (${1:variable} in ${2:vector}) {
	${0}
}
endsnippet

snippet while "while" b
while (${1:condition}) {
	${0}
}
endsnippet

snippet c "c function"
c(${0:${VISUAL:items}})
endsnippet

snippet li "list function"
list(${0:${VISUAL:items}})
endsnippet

snippet pl "Plot function"
plot(${1:${VISUAL:x}}, ${0:y})
endsnippet

snippet ggp "ggplot2 plot"
ggplot(${1:${VISUAL:data}}, aes(${0:aesthetics}))
endsnippet

snippet vec
${1:var} <- c("${0:${VISUAL:/ /","/g}}")
endsnippet
